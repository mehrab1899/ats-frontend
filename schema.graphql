type AuthPayload {
  token: String!
}

type Mutation {
  signup(email: String!, password: String!, firstName: String, lastName: String): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createJob(input: JobInput!): Job!
  updateJob(id: ID!, input: JobInput!): Job!
  updateJobStatus(id: ID!, status: JobStatus!): Job!
  submitApplicationText(input: ApplicantTextInput!, cv: Upload!, coverLetter: Upload!): Applicant!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

enum JobStatus {
  OPEN
  CLOSED
  DRAFT
}

type Job {
  id: String!
  title: String!
  description: String!
  status: JobStatus!
  skillsRequired: JSON!
  benefits: JSON!
  createdAt: String!
  applicantCount: Int!
}

input JobInput {
  title: String!
  description: String!
  status: JobStatus
  skillsRequired: JSON!
  benefits: JSON!
}

type Query {
  jobs: [Job!]!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

enum Stage {
  APPLIED
  SHORTLISTED
  INTERVIEWED
  HIRED
  REJECTED
}

type Applicant {
  id: String!
  firstName: String!
  lastName: String!
  email: String!
  phone: String!
  jobId: String!
  stage: Stage!
  cv: String!
  coverLetter: String!
  message: String
  appliedAt: String!
}

input ApplicantTextInput {
  firstName: String!
  lastName: String!
  email: String!
  phone: String!
  jobId: String!
  message: String
}